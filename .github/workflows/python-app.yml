name: Build and Package QphotoRenamer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      # 1. 检出代码库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      # 4. 下载并解压 tkdnd（用于拖放功能）
      - name: Download and extract tkdnd
        run: |
          curl -L -o tkdnd.zip https://github.com/petasis/tkdnd/releases/download/tkdnd-release-test-v2.9.4-rc3/tkdnd-2.9.4-windows-x64.zip
          mkdir -p tkdnd
          tar -xf tkdnd.zip -C tkdnd

      # 5. 使用 PyInstaller 打包应用
      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --windowed --icon=icon.ico --add-data "QphotoRenamer.ini;." --add-data "icon.ico;." --add-data "tkdnd/*;tkdnd" QphotoRenamer.py

      # 6. 上传构建产物作为 Artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QphotoRenamer-build
          path: dist/QphotoRenamer.exe

      # 7. 获取最新 Release 版本号（修改后的 0.1 递增逻辑）
      - name: Get latest release version
        id: get_version
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1,
            });
            let version;
            if (response.data.length === 0) {
              version = '1.0'; // 初始版本改为 1.0
            } else {
              const latestTag = response.data[0].tag_name;
              // 匹配格式：可选的 v 前缀 + 数字.数字（允许结尾有其他字符但主要取前两部分）
              const versionMatch = latestTag.match(/^v?(\d+)\.(\d+)/i);
              if (!versionMatch) {
                version = '1.0';
              } else {
                const major = parseInt(versionMatch[1], 10);
                const minor = parseInt(versionMatch[2], 10) + 1; // 递增次要版本
                version = `${major}.${minor}`;
              }
            }
            // 使用环境文件设置输出
            const fs = require('fs');
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `version=${version}\n`);

      # 8. 创建 GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/github-script@v6
        with:
          script: |
            const tagName = '${{ steps.get_version.outputs.version }}';
            const releaseName = 'QphotoRenamer v' + tagName;
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: releaseName,
              draft: false,
              prerelease: false,
            });
            const fs = require('fs');
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `upload_url=${response.data.upload_url}\n`);

      # 9. 上传构建产物到 Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/QphotoRenamer.exe
          asset_name: QphotoRenamer-v${{ steps.get_version.outputs.version }}.exe
          asset_content_type: application/octet-stream