name: Build and Package QphotoRenamer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Download and extract tkdnd
        run: |
          curl -L -o tkdnd.zip https://github.com/petasis/tkdnd/releases/download/tkdnd-release-test-v2.9.4-rc3/tkdnd-2.9.4-windows-x64.zip
          mkdir -p tkdnd
          tar -xf tkdnd.zip -C tkdnd

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --windowed --icon=logo.ico --add-data "QphotoRenamer.ini;." --add-data "logo.ico;." --add-data "tkdnd;tkdnd" QphotoRenamer.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QphotoRenamer-build
          path: dist/QphotoRenamer.exe

      - name: Delete existing tag if it exists
        id: delete_tag
        uses: actions/github-script@v6
        with:
          script: |
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'tags/latest',
              });
              console.log('Deleted existing tag: latest');
            } catch (error) {
              if (error.status === 404) {
                console.log('Tag does not exist, skipping deletion');
              } else {
                throw error;
              }
            }

      - name: Create Release
        id: create_release
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: 'latest',
              name: 'Release latest',
              draft: false,
              prerelease: false,
            });
            return response.data.upload_url;

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ fromJSON(steps.create_release.outputs.result) }}
          asset_path: dist/QphotoRenamer.exe
          asset_name: QphotoRenamer.exe
          asset_content_type: application/octet-stream
