name: Build and Package QphotoRenamer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Download and extract tkdnd
        run: |
          curl -L -o tkdnd.zip https://github.com/petasis/tkdnd/releases/download/tkdnd-release-test-v2.9.4-rc3/tkdnd-2.9.4-windows-x64.zip
          mkdir -p tkdnd
          tar -xf tkdnd.zip -C tkdnd

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --windowed --icon=logo.ico --add-data "QphotoRenamer.ini;." --add-data "logo.ico;." --add-data "tkdnd/*;tkdnd" QphotoRenamer.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QphotoRenamer-build
          path: dist/QphotoRenamer.exe

      - name: Get latest release version
        id: get_version
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1, // 只获取最新的 Release
            });
            let version;
            if (response.data.length === 0) {
              // 如果没有 Release，从 QphotoRenamer-v1.0.0 开始
              version = 'QphotoRenamer-v1.0.0';
            } else {
              const latestTag = response.data[0].tag_name;
              const versionMatch = latestTag.match(/^QphotoRenamer-v(\d+)\.(\d+)\.(\d+)$/);
              if (!versionMatch) {
                // 如果 tag_name 不符合规范，从 QphotoRenamer-v1.0.0 开始
                version = 'QphotoRenamer-v1.0.0';
              } else {
                // 递增版本号（例如 QphotoRenamer-v2.0.0 -> QphotoRenamer-v2.0.1）
                const major = parseInt(versionMatch[1], 10);
                const minor = parseInt(versionMatch[2], 10);
                const patch = parseInt(versionMatch[3], 10) + 1;
                version = `QphotoRenamer-v${major}.${minor}.${patch}`;
              }
            }
            // 使用环境文件设置输出
            const fs = require('fs');
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `version=${version}\n`);

      - name: Create Release
        id: create_release
        uses: actions/github-script@v6
        with:
          script: |
            const tagName = '${{ steps.get_version.outputs.version }}'; // 使用动态生成的版本号（例如 QphotoRenamer-v2.0.1）
            const releaseName = tagName.replace(/-/g, ' '); // 将 - 替换为空格，用于 Release 名称
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName, // 使用 QphotoRenamer-v2.0.1 作为 tag_name
              name: releaseName, // 使用 QphotoRenamer v2.0.1 作为 Release 名称
              draft: false,
              prerelease: false,
            });
            // 使用环境文件设置输出
            const fs = require('fs');
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `upload_url=${response.data.upload_url}\n`);

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/QphotoRenamer.exe
          asset_name: QphotoRenamer.exe
          asset_content_type: application/octet-stream
